version: "3"
services:
  todo-app-db:
    image: postgres
    container_name: todo-app-db
    restart: always
    environment:
      - "POSTGRES_DB=${POSTGRES_DB}"
      - "POSTGRES_USER=${POSTGRES_USER}"
      - "POSTGRES_PASSWORD=${POSTGRES_PASSWORD}"
      - "PGDATA=/pgdata"
    volumes:
      - ./data:/pgdata
    ports:
      - 5432:5432
    networks:
      - todo-app-backend-net
  todo-app-pgadmin:
    image: dpage/pgadmin4
    container_name: todo-app-pgadmin
    restart: always
    environment:
      - "PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}"
      - "PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}"
    # ports:
    #   - '127.0.0.1:${PGADMIN_PORT}:80'
    volumes:
      - ./pgadmin-data:/var/lib/pgadmin
    networks:
      - todo-app-frontend-net
      - todo-app-backend-net
    depends_on:
      - todo-app-db
  todo-app-web:
    image: nginx:1.25-alpine-slim
    container_name: todo-app-web
    restart: always
    volumes:
      - ./nginx:/etc/nginx/conf.d
    ports:
      - "${PUBLIC_PORT}:80"
    networks:
      - todo-app-frontend-net
    depends_on:
      - todo-app-db
      - todo-app-pgadmin

  todo-node-app:
    build:
      context: ./ # Uses the current directory as build context
      dockerfile: Dockerfile # Specifies the Dockerfile to use
    ports:
      - "8080:8080" # Maps host port to container port
    volumes:
      - ./app:/app # Mounts the local app directory to container
    environment:
      - NODE_OPTIONS=${NODE_OPTIONS}
    restart: unless-stopped
    command: npm run build && npm start
    networks:
      - todo-app-backend-net

networks:
  todo-app-backend-net:
  todo-app-frontend-net:
